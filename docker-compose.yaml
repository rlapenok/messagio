version: '2.1'
services: 
  panda:
    image: docker.redpanda.com/redpandadata/console:v2.3.8
    container_name: panda
    depends_on:
      kafka:
        condition: service_healthy
    healthcheck:
      test: nc -z localhost 8080 || exit 1
      interval: 5s
      timeout: 10s
      retries: 10
    ports:
      - "8080:8080"
    environment:
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_TLS_ENABLED=false
      - KAFKA_SASL_ENABLED=false
    networks:
      - my-network     

  postgres:
    image: postgres:latest
    container_name: postgres
    mem_limit: 1024m
    healthcheck:
      test: bash -c '((echo >/dev/tcp/localhost/5432) &>/dev/null)'
      interval: 5s
      timeout: 10s
      retries: 5
    environment:
      - POSTGRES_PASSWORD=messagio
      - POSTGRES_USER=messagio
      - POSTGRES_DB=test
    networks:
      - my-network 
     

  kafka:
    image: bitnami/kafka:3.6.1
    container_name: kafka
    healthcheck:
      test: ((echo >/dev/tcp/localhost/9092) &>/dev/null) || exit -1
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - my-network 
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  
  server:
    container_name: server
    build:
      context: .
      dockerfile: Dockerfile
    ports:
        - 7070:7070
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy     
    networks:
      - my-network      


networks:
    my-network:
      driver: bridge
      name: my-network